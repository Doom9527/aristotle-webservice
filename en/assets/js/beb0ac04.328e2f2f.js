"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[382],{3916:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"configuration","title":"Service Configuration","description":"[//]: # (Copyright 2024 Paion Data)","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/configuration.md","sourceDirName":".","slug":"/configuration","permalink":"/aristotle-webservice/en/docs/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/configuration.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Service Configuration"},"sidebar":"tutorialSidebar","previous":{"title":"Local Development Setup","permalink":"/aristotle-webservice/en/docs/setup"},"next":{"title":"Application Deployment","permalink":"/aristotle-webservice/en/docs/deployment"}}');var r=i(4848),a=i(8453);const s={sidebar_position:2,title:"Service Configuration"},t=void 0,c={},l=[{value:"Configuration Loading Order",id:"configuration-loading-order",level:3},{value:"Core Configurations",id:"core-configurations",level:3},{value:"1. Server Configuration",id:"1-server-configuration",level:4},{value:"2. Neo4j Database Configuration",id:"2-neo4j-database-configuration",level:4},{value:"3. Cache Configuration",id:"3-cache-configuration",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["This section describes the main configurations for the ",(0,r.jsx)(n.a,{href:"https://github.com/paion-data/aristotle/",children:"Aristotle"})," service. All settings are located in the ",(0,r.jsx)(n.code,{children:"src/main/resources/application.yaml"})," file."]}),"\n",(0,r.jsx)(n.h3,{id:"configuration-loading-order",children:"Configuration Loading Order"}),"\n",(0,r.jsx)(n.p,{children:"The system supports multiple configuration sources, which are loaded in the following order of precedence (higher-priority sources override lower-priority ones):"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Operating System Environment Variables"}),": e.g., ",(0,r.jsx)(n.code,{children:"export SERVER_PORT=8081"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Java System Properties"}),": e.g., ",(0,r.jsx)(n.code,{children:"java -jar app.jar -Dserver.port=8082"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"application.yaml"})," File"]}),": The configuration file within the project."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"core-configurations",children:"Core Configurations"}),"\n",(0,r.jsxs)(n.p,{children:["The following are the key configuration items in the ",(0,r.jsx)(n.code,{children:"application.yaml"})," file."]}),"\n",(0,r.jsx)(n.h4,{id:"1-server-configuration",children:"1. Server Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"server:\n  port: 8080 # Application service port\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-neo4j-database-configuration",children:"2. Neo4j Database Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"spring:\n  data:\n    neo4j:\n      uri: bolt://localhost:7687\n      database: neo4j\n      username: neo4j\n      password: your_password\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"uri"})}),": The connection URI for your Neo4j database."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"database"})}),": The name of the database instance to connect to.","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Since Neo4j 4.x, multiple databases are supported. The Community Edition supports only the default ",(0,r.jsx)(n.code,{children:"neo4j"})," database, while the Enterprise Edition allows for multiple databases. If you are using the Enterprise Edition with a custom database, change this value to your database name."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"username"})}),": The database username."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"password"})}),": The database password."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"3-cache-configuration",children:"3. Cache Configuration"}),"\n",(0,r.jsx)(n.p,{children:"The system supports two levels of caching, Caffeine (local) and Redis (distributed), which can be enabled or disabled independently."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"spring:\n  # Caffeine local cache configuration\n  read-cache:\n    enabled: true          # true: enable, false: disable\n    num-subgraphs: 500     # Maximum number of graphs to cache\n\n  # Redis distributed cache configuration\n  redis:\n    enabled: false         # true: enable, false: disable\n    host: 127.0.0.1\n    port: 6379\n    password: your_redis_password\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["For a detailed explanation of the caching mechanism, please refer to the ",(0,r.jsx)(n.a,{href:"/aristotle-webservice/en/docs/caching",children:"Caching"})," documentation."]})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>t});var o=i(6540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);